{"version":3,"sources":["features/currentTodo.ts","types/Status.ts","features/filter.ts","features/todos.ts","app/store.ts","app/hooks.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["ActionType","Status","actions","todo","type","payload","currentTodoReducer","state","action","TODO_SET","TODO_REMOVE","initialState","status","ALL","query","SET_FILTER","SET_QUERY","filterReducer","todos","todosReducer","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoList","isLoading","dispatch","visibleTodos","useMemo","filteredTodos","filterItems","completed","ACTIVE","COMPLETED","lowerQuery","trim","toLowerCase","title","toLocaleLowerCase","includes","length","className","map","id","cn","onClick","currentTodoActions","TodoFilter","onSubmit","event","preventDefault","value","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","useState","user","setUser","setIsLoading","loadCurrentUser","a","userId","loadedUser","Error","useEffect","email","name","href","App","loadTodos","loadedtodos","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.14e7ec3a.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\nenum ActionType {\n  TODO_REMOVE = 'currentTodo/REMOVE',\n  TODO_SET = 'currentTodo/SET',\n}\n\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case ActionType.TODO_SET:\n      return action.payload;\n\n    case ActionType.TODO_REMOVE:\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","export enum Status {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import { Status } from '../types/Status';\n\nconst enum ActionType {\n  SET_FILTER = 'SET_FILTER',\n  SET_QUERY = 'SET_QUERY',\n}\n\ntype FilterAction = {\n  type: ActionType.SET_FILTER,\n  payload: Status,\n};\n\ntype QueryAction = {\n  type: ActionType.SET_QUERY,\n  payload: string,\n};\n\nconst setFilter = (status: Status): FilterAction => ({\n  type: ActionType.SET_FILTER,\n  payload: status,\n});\n\nconst setQuery = (query: string): QueryAction => ({\n  type: ActionType.SET_QUERY,\n  payload: query,\n});\n\nconst initialState = {\n  status: Status.ALL,\n  query: '',\n};\n\ntype Action = FilterAction | QueryAction;\n\nexport const actions = { setFilter, setQuery };\n\nconst filterReducer = (state = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.SET_FILTER:\n      return {\n        ...state,\n        status: action.payload,\n      };\n\n    case ActionType.SET_QUERY:\n      return {\n        ...state,\n        query: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype SetTodosAction = {\n  type: 'todos/SET',\n  payload: Todo[]\n};\n\nconst setTodos = (todos: Todo[]): SetTodosAction => ({\n  type: 'todos/SET',\n  payload: todos,\n});\n\nexport const actions = { setTodos };\n\ntype State = Todo[] | [];\n\nconst todosReducer = (state: State = [], action: SetTodosAction): State => {\n  switch (action.type) {\n    case 'todos/SET':\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/* eslint-disable max-len */\nimport cn from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as currentTodoActions } from '../../features/currentTodo';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  isLoading: boolean\n};\n\nexport const TodoList: React.FC<Props> = ({ isLoading }) => {\n  const todos = useAppSelector(state => state.todos);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const { status, query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  const visibleTodos = useMemo(() => {\n    let filteredTodos = todos;\n\n    const filterItems = (completed: boolean) => {\n      return filteredTodos.filter(todo => todo.completed === completed);\n    };\n\n    switch (status) {\n      case Status.ALL:\n        filteredTodos = todos;\n        break;\n\n      case Status.ACTIVE:\n        filteredTodos = filterItems(false);\n        break;\n\n      case Status.COMPLETED:\n        filteredTodos = filterItems(true);\n        break;\n\n      default:\n        break;\n    }\n\n    if (query) {\n      filteredTodos = filteredTodos.filter(todo => {\n        const lowerQuery = query.trim().toLowerCase();\n\n        return todo.title.toLocaleLowerCase().includes(lowerQuery);\n      });\n    }\n\n    return filteredTodos;\n  }, [status, query, todos]);\n\n  return (\n    <>\n      {!isLoading && !visibleTodos.length\n        && (\n          <p className=\"notification is-warning\">\n            There are no todos matching current filter criteria\n          </p>\n        )}\n      {visibleTodos.length > 0 && (\n        <table className=\"table is-narrow is-fullwidth\">\n          <thead>\n            <tr>\n              <th>#</th>\n\n              <th>\n                <span className=\"icon\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </th>\n\n              <th>Title</th>\n              <th> </th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {visibleTodos.map(todo => {\n              const { title, id, completed } = todo;\n\n              return (\n                <tr data-cy=\"todo\" key={id}>\n                  <td className=\"is-vcentered\">{id}</td>\n                  <td className=\"is-vcentered\">\n                    {completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )}\n                  </td>\n                  <td className=\"is-vcentered is-expanded\">\n                    <p\n                      className={cn({\n                        'has-text-success': completed,\n                        'has-text-danger': !completed,\n                      })}\n                    >\n                      {title}\n                    </p>\n                  </td>\n                  <td className=\"has-text-right is-vcentered\">\n                    <button\n                      data-cy=\"selectButton\"\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={() => dispatch(currentTodoActions.setTodo(todo))}\n                    >\n                      <span className=\"icon\">\n                        <i\n                          className={cn({\n                            'far fa-eye-slash': currentTodo?.id === id,\n                            'far fa-eye': currentTodo?.id !== id,\n                          })}\n                        />\n                      </span>\n                    </button>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const { status, query } = useAppSelector(state => state.filter);\n  const dispatch = useAppDispatch();\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={event => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={\n              e => dispatch(actions.setFilter(e.target.value as Status))\n            }\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={\n            e => dispatch(actions.setQuery(e.target.value))\n          }\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query.length > 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch(actions.setQuery(''))}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getUser } from '../../api';\nimport { useAppSelector } from '../../app/hooks';\nimport { actions } from '../../features/currentTodo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useDispatch();\n\n  const loadCurrentUser = async () => {\n    if (currentTodo) {\n      try {\n        setIsLoading(true);\n        const loadedUser = await getUser(currentTodo.userId);\n\n        setUser(loadedUser);\n      } catch (error) {\n        throw new Error('Could\\'nt load user');\n      } finally {\n        setIsLoading(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadCurrentUser();\n  }, []);\n\n  const { email, name } = user || {};\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading && (<Loader />)}\n\n      {user && currentTodo && (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${currentTodo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => dispatch(actions.removeTodo())}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">{currentTodo.title}</p>\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo.completed\n                ? <strong className=\"has-text-danger\">Planned</strong>\n                : <strong className=\"has-text-success\">Done</strong>}\n              {' by '}\n              <a href={`mailto:${email}`}>{name}</a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { getTodos } from './api';\nimport { actions } from './features/todos';\n\nexport const App: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const loadTodos = async () => {\n    try {\n      setIsLoading(true);\n      const loadedtodos = await getTodos();\n\n      dispatch(actions.setTodos(loadedtodos));\n    } catch (error) {\n      throw new Error('Error loading todos');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {isLoading && <Loader />}\n              {!isLoading && <TodoList isLoading={isLoading} />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}